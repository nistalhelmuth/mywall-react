{"version":3,"sources":["components/General/FormTextArea/formtextarea.module.css","components/General/CommentForm/commentForm.module.css","components/Main/main.module.css","components/General/FormSelect/formInput.module.css","components/App/app.module.css","history.js","components/General/FormInput/index.jsx","types/user.js","reducers/auth.js","types/post.js","reducers/post.js","reducers/user.js","reducers/index.js","actions/user.js","components/Header/index.jsx","components/General/FormTextArea/index.jsx","components/General/CommentForm/index.jsx","components/General/Comment/index.jsx","actions/post.js","components/General/Post/index.jsx","components/General/Wall/index.jsx","components/Main/index.jsx","components/General/FormSelect/index.jsx","components/Register/index.jsx","components/Profile/index.jsx","components/App/index.jsx","apis/routes.js","apis/user.js","sagas/user.js","apis/post.js","sagas/post.js","sagas/index.js","configureStore.js","reportWebVitals.js","index.js","components/General/Post/post.module.css","components/Header/header.module.css","components/General/Wall/wall.module.css","components/General/FormInput/formInput.module.css","components/General/Comment/comment.module.css","components/Register/register.module.css","components/Profile/profile.module.css"],"names":["module","exports","history","createBrowserHistory","forwardTo","location","push","FormInput","name","label","error","type","placeholder","onChange","value","handleBlur","bigStyles","className","styles","formInput","big","onBlur","autoFocus","formNoValidate","USER_LOGED_IN","USER_LOGED_IN_SUCCEEDED","USER_LOGED_IN_FAILED","USER_LOGED_OUT","USER_REGISTERED","USER_REGISTERED_FAILED","FETCHED_USER_PROFILE","FETCHED_USER_PROFILE_SUCCEEDED","stateShape","id","undefined","token","authenticated","auth","state","action","types","payload","FETCHED_ALL_POSTS","FETCHED_ALL_POSTS_SUCCEEDED","FETCHED_ALL_POSTS_FAILED","CREATED_POST","CREATED_POST_SUCCEEDED","CREATED_POST_FAILED","FETCHED_ALL_COMMENTS","FETCHED_ALL_COMMENTS_SUCCEEDED","FETCHED_ALL_COMMENTS_FAILED","COMMENTED_POST","COMMENTED_POST_SUCCEEDED","COMMENTED_POST_FAILED","postDefaultState","loadingPosts","loadingComments","nextPage","currentPage","pageSize","combineReducers","post","postTypes","clean","byId","content","randomId","postByIdState","commentsById","commentsOrder","date_created","created_by","date","Date","dateCreated","getMonth","getDate","getFullYear","postId","oldPost","createdBy","shift","allPosts","Object","values","forEach","allComments","comment","map","comments","order","postOrderState","getPostById","genreDict","M","F","defaultUserState","profileId","email","city","genre","loading","registerErrors","user","userTypes","authReducer","postReducer","userReducer","getUserToken","fromAuthReducer","getIfAuthorized","getAuthId","getAuthName","getIfNextPage","fromPostReducer","getCurrentPage","getPageSize","getPostLoading","getCommentsLoading","getAllPosts","getAllCommentsByPost","commentId","getCommentById","getUserInformation","getUserErrors","fromUserReducer","doLoginConfirm","doLoginDecline","registerUserDecline","fetchProfileInfoConfirm","visitors","feeling","SignupSchema","PropTypes","bool","func","isRequired","Yup","shape","required","password","registerCamps","component","compose","withRouter","connect","authId","selectors","authorized","stateErrors","dispatch","doLogin","userActions","doLogout","header","data-test","to","logo","src","alt","greedings","onClick","initialValues","validationSchema","onSubmit","errors","touched","handleChange","handleSubmit","login","camp","options","FormTextArea","formTextArea","CommentForm","formik","useFormik","form","string","number","authName","text","fetchAllPosts","fetchAllPostsConfirm","fetchAllPostsDecline","message","createPostConfirm","createPostDecline","fetchAllCommentsConfirm","fetchAllCommentsDecline","commentPostConfirm","commentPostDecline","Post","arrayOf","props","showComments","this","fetchComments","setState","createComment","commentLoading","footer","loadComments","bind","length","bot","Component","postActions","uuidv4","Wall","fetchPosts","posts","createPost","enabledPost","next","wall","more","Main","postLoading","fetchAllPost","main","option","object","min","max","password2","FormSelect","doRegister","register","validate","camps","Profile","params","fetchProfileInfo","fetchAllPostForUser","userInformation","match","profile","information","profileImage","parseInt","word","path","Register","App","app","prop","View","render","URL","getProfileInfo","Promise","resolve","reject","fetch","CURRENT_URL","then","resultado","ok","json","res","catch","registerUser","headers","method","body","JSON","stringify","profileFetcher","userRegister","userLogIn","LoginSaga","call","postApi","response","put","takeLatest","limit","offset","url","keys","key","searchParams","append","getAllComments","Authorization","postFetcher","commentsFetcher","postCreator","commentCreator","select","delay","results","mainSaga","all","fork","UserSaga","PostSaga","sagaMiddleware","createSagaMiddleware","persistConfig","storage","whitelist","configureStore","persistedReducer","persistReducer","reducer","store","createStore","applyMiddleware","persistor","persistStore","run","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","storeConfig","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.07cb7b65.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formTextArea\":\"formtextarea_formTextArea__mfNyH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"commentForm_form__2zrUE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__3NTyC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"formInput_formInput__1FuV-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__WPEG2\"};","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n\nexport const forwardTo = (location) => {\n  history.push(location);\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './formInput.module.css';\n\nconst FormInput = ({\n  name,\n  label,\n  error,\n  type,\n  placeholder,\n  onChange,\n  value,\n  handleBlur,\n  bigStyles,\n}) => (\n  <div className={bigStyles ? `${styles.formInput} ${styles.big}` : styles.formInput}>\n    {\n      label && (\n        <label>\n          {label}:\n          {\n            error && (\n              <span> {error}* </span>\n            )\n          }\n        </label>\n      )\n    }\n    <input\n      onBlur={handleBlur}\n      name={name}\n      type={type}\n      onChange={onChange}\n      placeholder={placeholder}\n      value={value}\n      autoFocus={false}\n      formNoValidate\n    />\n    {\n      !label && (\n        <label>\n          {\n            error && (\n              <span> {error}* </span>\n            )\n          }\n          &nbsp;\n        </label>\n      )\n    }\n  </div>\n);\n\nFormInput.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default FormInput;\n","export const USER_LOGED_IN = 'USER_LOGED_IN';\nexport const USER_LOGED_IN_SUCCEEDED = 'USER_LOGED_IN_SUCCEEDED';\nexport const USER_LOGED_IN_FAILED = 'USER_LOGED_IN_FAILED';\nexport const USER_LOGED_OUT = 'USER_LOGED_OUT';\nexport const USER_LOGED_OUT_SUCCEEDED = 'USER_LOGED_OUT_SUCCEEDED';\nexport const USER_LOGED_OUT_FAILED = 'USER_LOGED_OUT_FAILED';\nexport const USER_REGISTERED = 'USER_REGISTERED';\nexport const USER_REGISTERED_SUCCEEDED = 'USER_REGISTERED_SUCCEEDED';\nexport const USER_REGISTERED_FAILED = 'USER_REGISTERED_FAILED';\nexport const FETCHED_USER_PROFILE = 'FETCHED_USER_PROFILE';\nexport const FETCHED_USER_PROFILE_SUCCEEDED = 'FETCHED_USER_PROFILE_SUCCEEDED';\nexport const FETCHED_USER_PROFILE_FAILED = 'FETCHED_USER_PROFILE_FAILED';","import * as types from '../types/user';\n\nconst stateShape = {\n  id: undefined,\n  name: undefined,\n  token: undefined,\n  authenticated: false,\n};\n\nconst auth = (state = stateShape, action) => {\n  switch (action.type) {\n    case types.USER_LOGED_IN_SUCCEEDED: {\n      const {\n        payload:{\n          id,\n          name,\n          token,\n        }\n      } = action;\n      return {\n        ...state,\n        id,\n        name,\n        token,\n        authenticated: true,\n      };\n    }\n    case types.USER_LOGED_IN_FAILED:\n    case types.USER_LOGED_OUT: {\n      return stateShape;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default auth;\n\nexport const getUserToken = (state) => state.token;\nexport const getIfAuthorized = (state) => state.authenticated;\nexport const getAuthId = (state) => state.id;\nexport const getAuthName = (state) => state.name;\n","export const FETCHED_ALL_POSTS = 'FETCHED_ALL_POSTS';\nexport const FETCHED_ALL_POSTS_SUCCEEDED = 'FETCHED_ALL_POSTS_SUCCEEDED';\nexport const FETCHED_ALL_POSTS_FAILED = 'FETCHED_ALL_POSTS_FAILED';\nexport const CREATED_POST = 'CREATED_POST';\nexport const CREATED_POST_SUCCEEDED = 'CREATED_POST_SUCCEEDED';\nexport const CREATED_POST_FAILED = 'CREATED_POST_FAILED';\nexport const DELETED_POST = 'DELETED_POST';\nexport const DELETED_POST_SUCCEEDED = 'DELETED_POST_SUCCEEDED';\nexport const DELETED_POST_FAILED = 'DELETED_POST_FAILED';\nexport const FETCHED_ALL_COMMENTS = 'FETCHED_ALL_COMMENTS';\nexport const FETCHED_ALL_COMMENTS_SUCCEEDED = 'FETCHED_ALL_COMMENTS_SUCCEEDED';\nexport const FETCHED_ALL_COMMENTS_FAILED = 'FETCHED_ALL_COMMENTS_FAILED';\nexport const COMMENTED_POST = 'COMMENTED_POST';\nexport const COMMENTED_POST_SUCCEEDED = 'COMMENTED_POST_SUCCEEDED';\nexport const COMMENTED_POST_FAILED = 'COMMENTED_POST_FAILED';","import { combineReducers } from 'redux';\nimport * as postTypes from '../types/post';\n\nexport const postDefaultState = {\n  loadingPosts: false,\n  loadingComments: false,\n  nextPage: false,\n  currentPage: -1,\n  pageSize: 3,\n};\n\nconst post = (state = postDefaultState, action) => {\n  switch(action.type) {\n    case postTypes.FETCHED_ALL_POSTS: {\n      const {\n        payload: {\n          clean\n        }\n      } = action; \n      return {\n        ...state,\n        loadingPosts: true,\n        nextPage: clean ? state.currentPage : false,\n        currentPage: clean ? -1 : state.currentPage,\n      }\n    }\n    case postTypes.FETCHED_ALL_POSTS_SUCCEEDED: {\n      const {\n        payload: {\n          nextPage,\n          currentPage,\n        },\n      } = action;\n      return {\n        ...state,\n        nextPage,\n        currentPage,\n        loadingPosts: false,\n      }\n    }\n    case postTypes.FETCHED_ALL_POSTS_FAILED: {\n      return {\n        ...state,\n        loadingPosts: false,\n      }\n    }\n    case postTypes.FETCHED_ALL_COMMENTS: {\n      return {\n        ...state,\n        loadingComments: true,\n      }\n    }\n    case postTypes.FETCHED_ALL_COMMENTS_SUCCEEDED:\n    case postTypes.FETCHED_ALL_COMMENTS_FAILED: {\n      return {\n        ...state,\n        loadingComments: false,\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst byId = (state={}, action) => {\n  switch (action.type) {\n    case postTypes.CREATED_POST: {\n      const {\n        payload: {\n          content,\n          randomId,\n        },\n      } = action;\n      const postByIdState = {\n        ...state,\n        [randomId]: {\n          content,\n          commentsById: {},\n          commentsOrder: [],\n        }\n      }\n      return postByIdState;\n    }\n    case postTypes.CREATED_POST_SUCCEEDED: {\n      const {\n        payload: {\n          id,\n          randomId,\n          content,\n          date_created,\n          created_by,\n        },\n      } = action;\n      const date = new Date(date_created);\n      const postByIdState = {\n        ...state,\n        [randomId]: {\n          id,\n          content,\n          dateCreated: `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`,\n          created_by,\n          commentsById: {},\n          commentsOrder: [],\n        }\n      }\n      return postByIdState;\n    }\n    case postTypes.CREATED_POST_FAILED: {\n      const {\n        payload: {\n          randomId,\n        },\n      } = action;\n      const postByIdState = {...state};\n      delete postByIdState[randomId];\n      return postByIdState;\n    }\n    case postTypes.COMMENTED_POST: {\n      const {\n        payload: {\n          postId,\n          content,\n          randomId,\n        } \n      } = action;\n      const oldPost = state[postId];\n      const postByIdState = {\n        ...state,\n        [postId]: {\n          ...oldPost,\n          \n          commentsById: {\n            [randomId] : {\n              content,\n            },\n            ...oldPost.commentsById,\n          },\n          commentsOrder: [\n            randomId,\n            ...oldPost.commentsOrder,\n          ],\n        }\n      }\n      return postByIdState;\n    }\n    case postTypes.COMMENTED_POST_SUCCEEDED: {\n      const {\n        payload: {\n          postId,\n          content,\n          createdBy,\n          dateCreated,\n          randomId,\n        } \n      } = action;\n      const oldPost = state[postId];\n      const date = new Date(dateCreated);\n      const postByIdState = {\n        ...state,\n        [postId]: {\n          ...oldPost,\n          commentsById: {\n            ...state[postId].commentsById,\n            [randomId] : {\n              content,\n              id: postId,\n              createdBy,\n              dateCreated: `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`,\n            },\n          },\n        }\n      }\n      return postByIdState;\n    }\n    case postTypes.COMMENTED_POST_FAILED: {\n      const {\n        payload: {\n          postId,\n          randomId\n        } \n      } = action;\n      const oldPost = state[postId];\n      delete oldPost.commentsById[randomId];\n      oldPost.commentsOrder.shift();\n      const postByIdState = {\n        ...state,\n        [postId]: oldPost,\n      }\n      return postByIdState;\n    }\n    case postTypes.FETCHED_ALL_POSTS: {\n      const {\n        payload: {\n          clean\n        }\n      } = action; \n      return clean ? {} : state\n    }\n    case postTypes.FETCHED_ALL_POSTS_SUCCEEDED: {\n      const {\n        payload: {\n          allPosts,\n        },\n      } = action;\n      const postByIdState = {...state}\n      Object.values(allPosts).forEach((post) => {\n        const date = new Date(post.date_created);\n        postByIdState[post.id] = {\n          ...postByIdState[post.id],\n          ...post,\n          dateCreated: `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`,\n          commentsById: {},\n          commentsOrder: [],\n        }\n      });\n      return postByIdState;\n    }\n    case postTypes.FETCHED_ALL_COMMENTS_SUCCEEDED: {\n      const {\n        payload: {\n          allComments,\n          postId,\n        },\n      } = action;\n      const oldPost = state[postId];\n      const commentsById = {}\n      Object.values(allComments).forEach((comment) => {\n        const date = new Date(comment.date_created);\n        commentsById[comment.id] = {\n          ...commentsById[comment.id],\n          ...comment,\n          dateCreated: `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`,\n        }\n      });;\n      const commentsOrder = Object.values(allComments).map((comments) => comments.id);\n      const postByIdState = {\n        ...state,\n        [postId]: {\n          ...oldPost,\n          commentsById,\n          commentsOrder,\n        }\n      }\n      return postByIdState;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nconst order = (state=[], action) => {\n  switch (action.type) {\n    case postTypes.CREATED_POST: {\n      const {\n        payload: {\n          randomId,\n        },\n      } = action;\n      const postOrderState = [\n        randomId,\n        ...state\n      ]\n      return postOrderState;\n    }\n    case postTypes.CREATED_POST_FAILED: {\n      const postOrderState = [...state];\n      postOrderState.shift();\n      return postOrderState;\n    }\n    case postTypes.FETCHED_ALL_POSTS: {\n      const {\n        payload: {\n          clean\n        }\n      } = action; \n      return clean ? [] : state\n    }\n    case postTypes.FETCHED_ALL_POSTS_SUCCEEDED: {\n      const {\n        payload: {\n          allPosts,\n        },\n      } = action;\n      const postOrderState = Object.values(allPosts).map((post) => post.id);\n      return [\n        ...state,\n        ...postOrderState,\n      ];\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default combineReducers({\n  post,\n  byId,\n  order\n})\n\n//selectores\nexport const getIfNextPage = (state) => state.post.nextPage;\nexport const getCurrentPage = (state) => state.post.currentPage;\nexport const getPageSize = (state) => state.post.pageSize;\nexport const getPostLoading = (state) => state.post.loadingPosts;\nexport const getCommentsLoading = (state) => state.post.loadingComments;\nexport const getAllPosts = (state) => state.order.map((id) => getPostById(state, id));\nexport const getPostById = (state, id) => state.byId[id] || undefined; \nexport const getCommentById = (state, postId, commentId) => state.byId[postId] ? state.byId[postId].commentsById[commentId] : undefined;\nexport const getAllCommentsByPost = (state, postId) => \n  state.byId[postId] ? (\n      state.byId[postId].commentsOrder.map((commentId) => getCommentById(state, postId, commentId))\n  ) : ( undefined );\n    \n","import * as userTypes from '../types/user';\n\nconst genreDict = {\n  M: 'Male',\n  F: 'Female',\n}\n\nexport const defaultUserState = {\n  profileId: undefined,\n  email: undefined,\n  name: undefined,\n  city: undefined,\n  genre: undefined,\n  dateCreated: undefined,\n  loading: undefined,\n  registerErrors: undefined,\n};\n\nconst user = (state = defaultUserState, action) => {\n  switch (action.type) {\n    case userTypes.USER_LOGED_IN_FAILED: \n    case userTypes.USER_REGISTERED_FAILED: {\n      const {\n        payload: {\n          error\n        } \n      } = action;\n      return {\n        ...state,\n        registerErrors: error,\n      }\n    }\n    case userTypes.FETCHED_USER_PROFILE_SUCCEEDED: {\n      const {\n        payload: {\n          profileId,\n          email,\n          name,\n          city,\n          genre,\n          dateCreated,\n        }\n      } = action;\n      const date = new Date(dateCreated);\n      return {\n        profileId,\n        email,\n        name,\n        city,\n        genre: genreDict[genre],\n        dateCreated: `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`,\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default user;\n\n//selectores\nexport const getUserErrors = (state) => state.registerErrors;\nexport const getUserInformation = (state) => state;\n\n","import { combineReducers } from 'redux';\nimport authReducer, * as fromAuthReducer from './auth';\nimport postReducer, * as fromPostReducer from './post';\nimport userReducer, * as fromUserReducer from './user';\n\nexport default combineReducers({\n  authReducer,\n  postReducer,\n  userReducer,\n});\n\n//auth\nexport const getUserToken = (state) => fromAuthReducer.getUserToken(state.authReducer);\nexport const getIfAuthorized = (state) => fromAuthReducer.getIfAuthorized(state.authReducer);\nexport const getAuthId = (state) => fromAuthReducer.getAuthId(state.authReducer);\nexport const getAuthName = (state) => fromAuthReducer.getAuthName(state.authReducer);\n\n//post\nexport const getIfNextPage = (state) => fromPostReducer.getIfNextPage(state.postReducer);\nexport const getCurrentPage = (state) => fromPostReducer.getCurrentPage(state.postReducer);\nexport const getPageSize = (state) => fromPostReducer.getPageSize(state.postReducer);\nexport const getPostLoading = (state) => fromPostReducer.getPostLoading(state.postReducer);\nexport const getCommentsLoading = (state) => fromPostReducer.getCommentsLoading(state.postReducer);\nexport const getAllPosts = (state) => fromPostReducer.getAllPosts(state.postReducer);\nexport const getAllCommentsByPost = (state, postId) => fromPostReducer.getAllCommentsByPost(state.postReducer, postId);\n\n//user\nexport const getUserInformation = (state) => fromUserReducer.getUserInformation(state.userReducer);\nexport const getUserErrors = (state) => fromUserReducer.getUserErrors(state.userReducer);","import * as types from '../types/user';\n\nexport const doLogin = ({\n  email,\n  password,\n}) => ({\n  type: types.USER_LOGED_IN,\n  payload: {\n    email,\n    password,\n  },\n});\n\nexport const doLoginConfirm = ({\n  id,\n  name,\n  token,\n}) => ({\n  type: types.USER_LOGED_IN_SUCCEEDED,\n  payload: {\n    id,\n    name,\n    token,\n  },\n});\n\nexport const doLoginDecline = ({\n  error,\n}) => ({\n  type: types.USER_LOGED_IN_FAILED,\n  payload: {\n    error,\n  },\n});\n\nexport const doLogout = () => ({\n  type: types.USER_LOGED_OUT,\n  payload: {\n\n  },\n});\n\nexport const doLogoutConfirm = () => ({\n  type: types.USER_LOGED_OUT_SUCCEEDED,\n  payload: {\n\n  },\n});\n\nexport const doLogoutDecline = () => ({\n  type: types.USER_LOGED_OUT_FAILED,\n  payload: {\n\n  },\n});\n\nexport const registerUser = ({\n  email,\n  name,\n  city,\n  genre,\n  password\n}) => ({\n  type: types.USER_REGISTERED,\n  payload: {\n    email,\n    name,\n    city,\n    genre,\n    password\n  },\n});\n\nexport const registerUserConfirm = ({\n  id,\n  name,\n  email,\n}) => ({\n  type: types.USER_REGISTERED_SUCCEEDED,\n  payload: {\n    id,\n    name,\n    email,\n  },\n});\n\nexport const registerUserDecline = ({\n  error,\n}) => ({\n  type: types.USER_REGISTERED_FAILED,\n  payload: {\n    error,\n  },\n});\n\nexport const fetchProfileInfo = ({\n  profileId,\n}) => ({\n  type: types.FETCHED_USER_PROFILE,\n  payload: {\n    profileId,\n  },\n});\n\nexport const fetchProfileInfoConfirm = ({\n  profileId,\n  email,\n  name,\n  city,\n  visitors,\n  genre,\n  feeling,\n  dateCreated,\n}) => ({\n  type: types.FETCHED_USER_PROFILE_SUCCEEDED,\n  payload: {\n    profileId,\n    email,\n    name,\n    city,\n    visitors,\n    genre,\n    feeling,\n    dateCreated,\n  },\n});\n\nexport const fetchProfileInfoDecline = ({\n  error,\n}) => ({\n  type: types.FETCHED_USER_PROFILE_FAILED,\n  payload: {\n    error,\n  },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport {\n  Link,\n  withRouter\n} from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport FormInput from '../General/FormInput';\nimport * as selectors from '../../reducers';\nimport * as userActions from '../../actions/user';\nimport styles from './header.module.css';\n\nexport const customPropTypes = {\n  authorized: PropTypes.bool,\n  doLogin: PropTypes.func.isRequired,\n}\n\nconst SignupSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email')\n    .required('Required'),\n  password: Yup.string()\n    .required('Required'),\n});\n\nconst registerCamps = [\n  {\n    name: \"Email\",\n    id: \"email\",\n    placeholder: \"email\",\n    component: FormInput,\n  },\n  {\n    name: \"Password\",\n    id: \"password\",\n    placeholder: \"password\",\n    component: FormInput,\n    type: \"password\",\n  },\n]\n\nconst Header = ({\n  authorized,\n  history,\n  doLogin,\n  stateErrors,\n  name,\n  doLogout,\n  authId,\n}) => (\n  <div className={styles.header} data-test=\"headerComponent\">\n    <Link\n      to=\"/\"\n      className={styles.logo}\n    >\n      <img src=\"assets/logo.png\" alt=\"headerLogo\"/>\n    </Link>\n    {\n      authorized ? (\n        <div\n          data-test=\"authorizedComponent\"\n          className={styles.greedings}\n        >\n          <h3>\n            Welcome back! {name}\n          </h3>\n          <button onClick={() => history.push(`/profile/${authId}`)}>Profile </button>\n          <button onClick={() => doLogout()}>Log Out </button>\n        </div>\n      ) : (\n        <Formik \n          data-test=\"unAuthorizedComponent\"\n          initialValues={{\n            email: undefined,\n            password: undefined,\n          }}\n          validationSchema={SignupSchema}\n          onSubmit={(values) => {\n            doLogin(values);\n          }}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleSubmit,\n            handleBlur,\n          }) => (\n              <div className={styles.login}>\n                <form\n                  className={styles.login}\n                  onSubmit={handleSubmit}\n                >\n                  {\n                    registerCamps.map((camp) => (\n                        <camp.component\n                          handleBlur={handleBlur}\n                          name={camp.id}\n                          onChange={handleChange}\n                          error={touched[camp.id] && (errors[camp.id] || (stateErrors && stateErrors[camp.id]))}\n                          options={camp.options}\n                          placeholder={camp.name}\n                          type={camp.type}\n                          value={values[camp.id]}\n                        />\n                    ))\n                  }\n                  <button type=\"submit\">Login </button>\n                </form>\n                <button onClick={() => history.push(\"/register\")}>Register </button>\n              </div>\n            )\n          }\n        </Formik>\n      )\n    }\n  </div>\n);\n\nHeader.propTypes = customPropTypes;\n\nexport default compose(\n  withRouter,\n  connect(\n    (state) => ({\n      authId: selectors.getAuthId(state),\n      name: selectors.getAuthName(state),\n      authorized: selectors.getIfAuthorized(state),\n      stateErrors: selectors.getUserErrors(state),\n    }),\n    (dispatch) => ({\n      doLogin(values) {\n        dispatch(userActions.doLogin({\n          email: values.email,\n          password: values.password,\n        }))\n      },\n      doLogout() {\n        dispatch(userActions.doLogout())\n      }\n    }),\n  )\n)(Header)\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './formtextarea.module.css'\n\nconst FormTextArea = ({\n  id,\n  name,\n  placeholder,\n  onChange,\n  value,\n}) => (\n  <textarea\n    id={id}\n    name={name}\n    placeholder={placeholder}\n    onChange={onChange}\n    value={value}\n    autoFocus={false}\n    formNoValidate\n    className={styles.formTextArea}\n  />\n);\n\nFormTextArea.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default FormTextArea;\n","import React from 'react';\nimport FormTextArea from '../FormTextArea';\nimport { useFormik } from 'formik';\nimport styles from './commentForm.module.css';\n\nconst CommentForm = ({\n  onSubmit\n}) => {\n  const formik = useFormik({\n    initialValues: {\n      content: '',\n    },\n    onSubmit,\n  });\n  return (\n    <form className={styles.form} onSubmit={formik.handleSubmit}>\n      <button type=\"submit\">Comment</button>\n      <FormTextArea\n        id=\"content\"\n        name=\"content\"\n        placeholder=\"Write Something...\"\n        onChange={formik.handleChange}\n        value={formik.values.content}\n      />\n    </form>\n\n  );\n};\n\nexport default CommentForm;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport * as selectors from '../../../reducers';\nimport styles from './comment.module.css';\n\nexport const customPropTypes = {\n  content: PropTypes.string,\n  dateCreated: PropTypes.string,\n  created_by: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n  }),\n  authId: PropTypes.number,\n  authName: PropTypes.string,\n}\n\n\nconst Comment = ({\n  content,\n  dateCreated,\n  created_by,\n  authId,\n  authName,\n}) => (\n  <div className={styles.comment} data-test=\"commentComponent\">\n    <Link to={`/profile/${created_by? created_by.id : authId}`}>\n      <img\n        src=\"assets/defaultProfile.png\"\n        alt=\"profileImage\"\n      />\n    </Link>\n    <div className={styles.content}>\n      <p className={styles.text}>\n        {created_by ? created_by.name : authName}\n      </p>\n      <p>\n        {content}\n      </p>\n      <p>\n        {dateCreated}\n      </p>\n    </div>\n  </div>\n);\n\nComment.propTypes = customPropTypes;\n\nexport default connect(\n  (state) => ({\n    authId: selectors.getAuthId(state),\n    authName: selectors.getAuthName(state),\n  }),\n)(Comment);\n","import * as types from '../types/post';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const fetchAllPosts = ({\n  profileId,\n  clean,\n}) => ({\n  type: types.FETCHED_ALL_POSTS,\n  payload: {\n    profileId,\n    clean,\n  },\n});\n\nexport const fetchAllPostsConfirm = ({\n  allPosts,\n  currentPage,\n  nextPage,\n}) => ({\n  type: types.FETCHED_ALL_POSTS_SUCCEEDED,\n  payload: {\n    allPosts,\n    currentPage,\n    nextPage,\n  },\n});\n\nexport const fetchAllPostsDecline = ({\n  message,\n}) => ({\n  type: types.FETCHED_ALL_POSTS_FAILED,\n  payload: {\n    message,\n  },\n});\n\nexport const createPost = ({\n  content,\n}) => ({\n  type: types.CREATED_POST,\n  payload: {\n    content,\n    randomId: uuidv4(),\n  },\n});\n\nexport const createPostConfirm = ({\n  id,\n  randomId,\n  content,\n  date_created,\n  created_by,\n}) => ({\n  type: types.CREATED_POST_SUCCEEDED,\n  payload: {\n    id,\n    content,\n    date_created,\n    created_by,\n    randomId,\n  },\n});\n\nexport const createPostDecline = ({\n  randomId,\n  message,\n}) => ({\n  type: types.CREATED_POST_FAILED,\n  payload: {\n    message,\n    randomId,\n  },\n});\n\nexport const deletePost = () => ({\n  type: types.DELETED_POST,\n  payload: {\n\n  },\n});\n\nexport const deletePostConfirm = ({\n  id,\n  content,\n  date_created,\n  created_by,\n}) => ({\n  type: types.DELETED_POST_SUCCEEDED,\n  payload: {\n    id,\n    content,\n    date_created,\n    created_by, \n  },\n});\n\nexport const deletePostDecline = ({\n  message,\n}) => ({\n  type: types.DELETED_POST_FAILED,\n  payload: {\n    message\n  },\n});\n\nexport const fetchAllComments = ({\n  postId,\n}) => ({\n  type: types.FETCHED_ALL_COMMENTS,\n  payload: {\n    postId,\n  },\n});\n\nexport const fetchAllCommentsConfirm = ({\n  allComments,\n  postId\n}) => ({\n  type: types.FETCHED_ALL_COMMENTS_SUCCEEDED,\n  payload: {\n    allComments,\n    postId\n  },\n});\n\nexport const fetchAllCommentsDecline = ({\n  message,\n}) => ({\n  type: types.FETCHED_ALL_COMMENTS_FAILED,\n  payload: {\n    message,\n  },\n});\n\nexport const commentPost = ({\n  postId,\n  content,\n}) => ({\n  type: types.COMMENTED_POST,\n  payload: {\n    postId,\n    content,\n    randomId: uuidv4(),\n  },\n});\n\nexport const commentPostConfirm = ({\n  postId,\n  randomId,\n  content,\n  createdBy,\n  dateCreated,\n}) => ({\n  type: types.COMMENTED_POST_SUCCEEDED,\n  payload: {\n    postId,\n    content,\n    randomId,\n    createdBy,\n    dateCreated,\n  },\n});\n\nexport const commentPostDecline = ({\n  postId,\n  randomId,\n  message,\n}) => ({\n  type: types.COMMENTED_POST_FAILED,\n  payload: {\n    postId,\n    randomId,\n    message,\n  },\n});\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport CommentForm from '../CommentForm'\nimport Comment from '../Comment'\nimport * as postActions from '../../../actions/post';\nimport * as selectors from '../../../reducers';\nimport styles from './post.module.css';\n\nexport const customPropTypes = {\n  content: PropTypes.string,\n  dateCreated: PropTypes.string,\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    content: PropTypes.string,\n    dateCreated: PropTypes.string,\n    created_by: PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n    }),\n  })),\n  created_by: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n  }),\n  createComment: PropTypes.func.isRequired,\n  commentLoading: PropTypes.bool,\n  authId: PropTypes.number,\n  authName: PropTypes.string,\n  fetchComments: PropTypes.func.isRequired,\n  postId: PropTypes.number,\n}\n\nclass Post extends Component {\n\n  static propTypes = customPropTypes;\n\n  constructor(props){\n    super(props);\n    this.state = {\n      showComments: false,\n    }\n  }\n\n  loadComments(){\n    const {\n      fetchComments,\n      postId,\n    } = this.props;\n    fetchComments(postId);\n    this.setState({\n      showComments: true,\n    })\n  }\n\n  render(){\n    const {\n      content,\n      dateCreated,\n      comments,\n      created_by,\n      createComment,\n      commentLoading,\n      authId,\n      authName,\n    } = this.props;\n    const {\n      showComments,\n    } = this.state;\n    return(\n      <div className={styles.post} data-test=\"postComponent\">\n        <Link to={`/profile/${created_by ? created_by.id : authId}`}> \n          <img\n            src=\"assets/defaultProfile.png\"\n            alt=\"profileImage\"\n          />\n        </Link>\n        <div className={styles.content}>\n          <p className={styles.text}>\n            {created_by ? created_by.name : authName}\n          </p>\n          <p className={styles.text}>\n            {content}\n          </p>\n          <p>\n            {created_by ? dateCreated : \"Creating...\"}\n          </p>\n          <div className={styles.footer}>\n            {\n              !showComments && created_by && (\n                <button onClick={this.loadComments.bind(this)}>\n                  View Comments\n                </button>\n              )\n            }\n            {\n              showComments && commentLoading && (\n                <h3 className={styles.loading}>\n                  Loading...\n                </h3>\n              )\n            }\n          </div>\n          {\n            showComments && (\n              <>\n                {\n                  authId && (\n                    <CommentForm onSubmit={createComment}/>\n                  )\n                }\n                {\n                 comments && comments.length ? (\n                    <div className={styles.bot}>\n                      {\n                        comments.map((comment) => (\n                          <Comment\n                            key={comment.id}\n                            content={comment.content}\n                            dateCreated={comment.dateCreated}\n                            created_by={comment.created_by}\n                          />\n                        ))\n                      }\n                    </div>\n                  ) : (\n                    <>\n                      {\n                        !commentLoading && (\n                          <p>\n                            {authId ? \"be the first to comment\" : \"No comment to show\"}\n                          </p>\n\n                        )\n                      }\n                    </>\n                  )\n                }\n              </>\n            )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state, { postId }) => ({\n    commentLoading: selectors.getCommentsLoading(state),\n    comments: selectors.getAllCommentsByPost(state, postId),\n    authId: selectors.getAuthId(state),\n    authName: selectors.getAuthName(state),\n  }),\n  (dispatch, { postId }) => ({\n    fetchComments(postId){\n      dispatch(postActions.fetchAllComments({\n        postId,\n      }))\n    },\n    createComment(values){\n      dispatch(postActions.commentPost({\n        postId,\n        content: values.content,\n      }))\n    }\n  }),\n)(Post);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport FormTextArea from '../FormTextArea';\nimport Post from '../Post'\nimport * as postActions from '../../../actions/post';\nimport * as selectors from '../../../reducers';\nimport styles from './wall.module.css';\n\nexport const customPropTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    content: PropTypes.string,\n    dateCreated: PropTypes.string,\n    created_by: PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n    }),\n  })),\n  fetchPosts: PropTypes.func.isRequired,\n  createPost: PropTypes.func.isRequired,\n  enabledPost: PropTypes.bool,\n  loading: PropTypes.bool,\n}\n\n\nclass Wall extends Component {\n\n  static propTypes = customPropTypes;\n\n  componentDidMount(){\n    const {\n      fetchPosts\n    } = this.props;\n    fetchPosts({\n      clean: true,\n    });\n  }\n\n  render() {\n    const {\n      posts,\n      createPost,\n      enabledPost,\n      loading,\n      fetchPosts,\n      next,\n    } = this.props\n    return (\n      <div className={styles.wall} data-test=\"wallComponent\">\n          {\n            enabledPost && (\n              <Formik\n                  data-test=\"postFormComponent\"\n                  initialValues={{\n                    content: '',\n                  }}\n                  onSubmit={(values) => {\n                    createPost(values);\n                  }}\n              > \n                {({\n                  values,\n                  handleChange,\n                  handleSubmit,\n                }) => (\n                    <form\n                      className={styles.form}\n                      onSubmit={handleSubmit}\n                    >\n                      <button type=\"submit\">Post</button>\n                      <FormTextArea\n                        id=\"content\"\n                        name=\"content\"\n                        type=\"text\"\n                        placeholder=\"Write something...\"\n                        onChange={handleChange}\n                        value={values.content}\n                      />\n                    </form>\n                  )\n                }\n              </ Formik>\n            )\n          }\n          {\n            posts && posts.length ? (\n              <>\n                {\n                  posts.map((post) => (\n                    <Post\n                      key={post.id}\n                      postId={post.id}\n                      content={post.content}\n                      dateCreated={post.dateCreated}\n                      comments={post.comments}\n                      created_by={post.created_by}\n                    />\n                  ))\n                }\n              </>\n            ) : (\n              <>\n                {\n                  !loading && (\n                    <p data-test=\"postPlaceholderComponent\">\n                      No posts to display\n                    </p>\n                  )\n                }\n              </>\n            )\n          }\n          {\n            loading ? (\n              <h3 className={styles.loading} data-test=\"postLoadingComponent\">\n                Loading...\n              </h3>\n            ) : (\n              <>\n                {\n                  next && (\n                    <button className={styles.more} onClick={() => fetchPosts()}>\n                      more\n                    </button>\n                  )\n                }\n              </>\n            )\n          }\n        </div>\n    )\n  }\n}\n\nexport default connect(\n  (state) => ({\n    next: selectors.getIfNextPage(state),\n  }),\n  (dispatch) => ({\n    createPost(values){\n      dispatch(postActions.createPost({\n        content: values.content\n      }))\n    }\n  }),\n)(Wall);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Wall from '../General/Wall';\nimport { connect } from \"react-redux\";\nimport * as postActions from '../../actions/post';\nimport * as selectors from '../../reducers';\nimport styles from './main.module.css';\n\nexport const customPropTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    content: PropTypes.string,\n    dateCreated: PropTypes.string,\n    created_by: PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n    }),\n  })),\n  postLoading: PropTypes.bool,\n  authId: PropTypes.number,\n  fetchAllPost: PropTypes.func.isRequired,\n}\n\nclass Main extends Component {\n\n  static propTypes = customPropTypes;\n\n  render() {\n    const {\n      posts,\n      postLoading,\n      authId,\n      fetchAllPost,\n    } = this.props;\n    return(\n      <div\n        className={styles.main}\n        data-test=\"mainComponent\"\n      >\n        <Wall\n          fetchPosts={fetchAllPost}\n          posts={posts}\n          enabledPost={authId}\n          loading={postLoading}\n        />\n      </div>\n    );\n  }\n\n}\n\nexport default connect(\n  (state) => ({\n    postLoading: selectors.getPostLoading(state),\n    posts: selectors.getAllPosts(state),\n    authId: selectors.getAuthId(state),\n  }),\n  (dispatch) => ({\n    fetchAllPost(clean) {\n      dispatch(postActions.fetchAllPosts({\n        clean,\n      }));\n    },\n  }),\n)(Main);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './formInput.module.css';\n\nconst FormInput = ({\n  name,\n  label,\n  error,\n  type,\n  placeholder,\n  onChange,\n  value,\n  handleBlur,\n  bigStyles,\n  options,\n}) => (\n  <div className={bigStyles ? styles.formInput : ''}>\n    {\n      label && (\n        <label>\n          {label}:\n          {\n            error && (\n              <span> {error}* </span>\n            )\n          }\n        </label>\n      )\n    }\n    <select\n      onBlur={handleBlur}\n      name={name}\n      type={type}\n      onChange={onChange}\n      placeholder={placeholder}\n      value={value}\n      autoFocus={false}\n      formNoValidate\n    >\n      <option />\n      {\n        options.map((option) => (\n          <option value={option.value}>{option.label}</option>\n\n        ))\n      }\n    </select>\n  </div>\n);\n\nFormInput.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default FormInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport FormInput from '../General/FormInput';\nimport FormSelect from '../General/FormSelect';\nimport * as selectors from '../../reducers';\nimport * as userActions from '../../actions/user';\nimport styles from './register.module.css';\n\nexport const customPropTypes = {\n  doRegister: PropTypes.func.isRequired,\n  stateErrors: PropTypes.object,\n}\n\nconst SignupSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email')\n    .required('Required'),\n  name: Yup.string()\n    .min(2, 'Too Short')\n    .max(50, 'Too Long')\n    .required('Required'),\n  city: Yup.string()\n    .min(2, 'Too Short')\n    .max(50, 'Too Long')\n    .required('Required'),\n  genre: Yup.string()\n    .required('Required'),\n  password: Yup.string()\n    .min(2, 'Too Short')\n    .max(50, 'Too Long')\n    .required('Required'),\n  password2: Yup.string()\n    .required('Required'),\n});\n\nconst registerCamps = [\n  {\n    name: \"Email\",\n    id: \"email\",\n    placeholder: \"email\",\n    component: FormInput,\n  },\n  {\n    name: \"Name\",\n    id: \"name\",\n    placeholder: \"name\",\n    component: FormInput,\n  },\n  {\n    name: \"City\",\n    id: \"city\",\n    placeholder: \"city\",\n    component: FormInput,\n  },\n  {\n    name: \"Genre\",\n    id: \"genre\",\n    placeholder: \"genre\",\n    type: \"options\",\n    options: [\n      {\n        label: 'Female',\n        value: 'F',\n      },\n      {\n        label: 'Male',\n        value: 'M',\n      },\n    ],\n    component: FormSelect,\n  },\n  {\n    name: \"Password\",\n    id: \"password\",\n    placeholder: \"password\",\n    component: FormInput,\n    type: \"password\",\n  },\n  {\n    name: \"Check Password\",\n    id: \"password2\",\n    placeholder: \"password\",\n    component: FormInput,\n    type: \"password\",\n  }\n]\n\nconst Register = ({\n  doRegister,\n  stateErrors,\n}) => (\n  <div className={styles.register}>\n    <Formik \n      initialValues={{\n        email: undefined,\n        name: undefined,\n        city: undefined,\n        genre: undefined,\n        password: undefined,\n        password2: undefined,\n      }}\n      validationSchema={SignupSchema}\n      validate={values => {\n        const errors = {};\n        if (values.password !== values.password2) {\n          errors.password2 = 'passwords do not match';\n        }\n        return errors;\n\n      }}\n      onSubmit={(values) => {\n        doRegister(values);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleSubmit,\n        handleBlur,\n      }) => (\n          <form onSubmit={handleSubmit} className={styles.form}>\n            <h1>\n              You are welcome!\n            </h1>\n            <h5>\n              we are happy to see you\n            </h5>\n            <div className={styles.camps}>\n              {\n                registerCamps.map((camp) => (\n                  <camp.component\n                    bigStyles\n                    error={touched[camp.id] && (errors[camp.id] || (stateErrors && stateErrors[camp.id]))}\n                    handleBlur={handleBlur}\n                    label={camp.name}\n                    name={camp.id}\n                    onChange={handleChange}\n                    options={camp.options}\n                    placeholder={camp.name}\n                    type={camp.type}\n                    value={values[camp.id]}\n                  />\n                ))\n              }\n            </div>\n            <button type=\"submit\">\n              Submit\n            </button>\n          </form>\n        )\n      }\n    </Formik>\n  </div>\n)\n\nRegister.propTypes = customPropTypes;\n\nexport default connect(\n  (state) => ({\n    stateErrors: selectors.getUserErrors(state),\n  }),\n  (dispatch) => ({\n    doRegister(values) {\n      dispatch(userActions.registerUser({\n        email: values.email,\n        name: values.name,\n        city: values.city,\n        genre: values.genre,\n        password: values.password,\n      }))\n    }\n  }),\n)(Register)\n\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { compose } from 'redux'\nimport PropTypes from 'prop-types';\nimport {\n  withRouter,\n} from \"react-router-dom\";\nimport Wall from '../General/Wall';\nimport * as userActions from '../../actions/user';\nimport * as postActions from '../../actions/post';\nimport * as selectors from '../../reducers';\nimport styles from './profile.module.css';\n\nexport const customPropTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    content: PropTypes.string,\n    dateCreated: PropTypes.string,\n    created_by: PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n    }),\n  })),\n  postLoading: PropTypes.bool,\n  authId: PropTypes.number,\n  userInformation: PropTypes.shape({\n    email: PropTypes.string,\n    name: PropTypes.string,\n    city: PropTypes.string,\n    genre: PropTypes.string,\n    dateCreated: PropTypes.string,\n  }),\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      profileId: PropTypes.string,\n    })\n  })\n}\n\n\nclass Profile extends Component {\n\n  static propTypes = customPropTypes;\n\n  componentDidMount() {\n    const {\n      fetchProfileInfo,\n    } = this.props;\n    fetchProfileInfo();\n  }\n\n  render() {\n    const {\n      posts,\n      fetchAllPostForUser,\n      postLoading,\n      userInformation: {\n        email,\n        name,\n        city,\n        genre,\n        dateCreated,\n      },\n      authId,\n      match: {\n        params: {\n          profileId,\n        },\n      },\n    } = this.props;\n    return (\n      <div className={styles.profile} data-test=\"profileComponent\">\n        <div className={styles.information}>\n          <img\n            src=\"assets/defaultProfile.png\"\n            alt=\"profileImage\"\n            className={styles.profileImage}\n          />\n          <p>\n            mail: {name}\n          </p>\n          <p>\n            email: {email}\n          </p>\n          <p>\n            city: {city}\n          </p>\n          <p>\n            genre: {genre}\n          </p>\n          <p>\n            date joined: {dateCreated}\n          </p>\n        </div>\n        <Wall\n          fetchPosts={fetchAllPostForUser}\n          posts={posts}\n          enabledPost={authId === parseInt(profileId)}\n          loading={postLoading}\n        />\n      </div>\n    );\n  }\n}\n\n\nexport default compose(\n  withRouter,\n  connect(\n    (state) => ({\n      postLoading: selectors.getPostLoading(state),\n      posts: selectors.getAllPosts(state), \n      userInformation: selectors.getUserInformation(state),\n      authId: selectors.getAuthId(state),\n    }),\n    (dispatch, {...props}) => ({\n      fetchAllPostForUser(clean) {\n        const {\n          match: {\n            params: {\n              profileId,\n            },\n          }\n        } = props;\n        dispatch(postActions.fetchAllPosts({\n          clean,\n          profileId,\n        }));\n      },\n      fetchProfileInfo() {\n        const {\n          match: {\n            params: {\n              profileId,\n            },\n          }\n        } = props;\n        dispatch(userActions.fetchProfileInfo({\n          profileId,\n        }));\n      },\n    }),\n  )\n)(Profile);\n","import React from 'react';\nimport {\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport Header from '../Header';\nimport Main from '../Main';\nimport Register from '../Register';\nimport Profile from '../Profile';\nimport styles from './app.module.css';\n\nconst options = [\n  {\n    word: 'main',\n    path: '/main',\n    component: Main,\n  },\n  {\n    word: 'profile',\n    path: '/profile/:profileId',\n    component: Profile,\n  },\n  {\n    word: 'register',\n    path: '/register',\n    component: Register,\n  },\n];\n\nconst App = () => (\n  <div className={styles.app} data-test=\"dataComponent\">\n    <Header />\n    <Switch>\n      {\n        options.map((prop) => {\n          const View = prop.component;\n          return (\n            <Route\n              path={prop.path}\n              render={() => <View />}\n              key={prop.word}\n            />\n          );\n        })\n      }\n      <Redirect to=\"/main\" />\n    </Switch>\n  </div>\n);\n\nexport default App;\n","const URL = 'http://localhost:8000';\n//const URL = 'PRODUCTION URL';\n\nexport default URL;","import CURRENT_URL from './routes';\n\nexport const getProfileInfo = (\n  profileId,\n) => new Promise((resolve, reject) => {\n  fetch(`${CURRENT_URL}/users/profile/${profileId}/`)\n  .then((resultado) =>  {\n    if (resultado.ok) {\n      resultado.json().then((res) => resolve(res));\n    } else {\n      resultado.json().then((res) => reject(res));\n    }\n  }).catch((error) => reject(error));\n});\n\nexport const registerUser = (\n  email,\n  name,\n  city,\n  genre,\n  password,\n) => new Promise((resolve, reject) => {\n  fetch(`${CURRENT_URL}/users/register/`, {\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    method: 'POST',\n    body: JSON.stringify({\n      email,\n      name,\n      city,\n      genre,\n      password,\n    })\n  })\n  .then((resultado) =>  {\n    if (resultado.ok) {\n      resultado.json().then((res) => resolve(res));\n    } else {\n      resultado.json().then((res) => reject(res));\n    }\n  }).catch((error) => reject(error));\n});\n\nexport const doLogin = (\n  email,\n  password,\n) => new Promise((resolve, reject) => {\n  fetch(`${CURRENT_URL}/users/login/`, {\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    method: 'POST',\n    body: JSON.stringify({\n      email,\n      password,\n    })\n  })\n  .then((resultado) =>  {\n    if (resultado.ok) {\n      resultado.json().then((res) => resolve(res));\n    } else {\n      resultado.json().then((res) => reject(res));\n    }\n  }).catch((error) => reject(error));\n});","import {\n  put,\n  takeLatest,\n  call,\n} from 'redux-saga/effects';\nimport { forwardTo } from '../history';\nimport * as userTypes from '../types/user';\nimport * as userActions from '../actions/user';\nimport * as postApi from '../apis/user';\n\nfunction* profileFetcher(action) {\n  const {\n    payload: {\n      profileId,\n    },\n  } = action;\n  try {\n    const response = yield call(\n      postApi.getProfileInfo,\n      profileId\n    );\n    yield put(userActions.fetchProfileInfoConfirm({\n      profileId: response.id,\n      email: response.email,\n      name: response.name,\n      city: response.city,\n      visitors: response.visitors,\n      genre: response.genre,\n      feeling: response.feeling,\n      dateCreated: response.date_created,\n    }));\n  } catch (message) {\n    yield put(userActions.fetchProfileInfoDecline({\n      error: message,\n    }));\n  }\n}\n\nfunction* userRegister(action) {\n  const {\n    payload: {\n      email,\n      name,\n      city,\n      genre,\n      password,\n    },\n  } = action;\n  try {\n    const response = yield call(\n      postApi.registerUser,\n      email,\n      name,\n      city,\n      genre,\n      password,\n    );\n    yield call(forwardTo, '/');\n    yield put(userActions.registerUserConfirm({\n      profileId: response.id,\n      email,\n      name,\n      city,\n      genre,\n      password,\n    }));\n  } catch (message) {\n    yield put(userActions.registerUserDecline({\n      error: message,\n    }));\n  }\n}\n\nfunction* userLogIn(action) {\n  const {\n    payload: {\n      email,\n      password,\n    },\n  } = action;\n  try {\n    const response = yield call(\n      postApi.doLogin,\n      email,\n      password,\n    );\n    yield put(userActions.doLoginConfirm({\n      id: response.id,\n      token: response.token,\n      name: response.name,\n    }));\n  } catch (message) {\n    yield put(userActions.doLoginDecline({\n      error: {\n        email: message.error,\n      }\n    }));\n  }\n}\n\n\n\nfunction* LoginSaga() {\n  yield takeLatest(\n    userTypes.FETCHED_USER_PROFILE,\n    profileFetcher\n  );\n  yield takeLatest(\n    userTypes.USER_REGISTERED,\n    userRegister\n  );\n  yield takeLatest(\n    userTypes.USER_LOGED_IN,\n    userLogIn\n  );\n}\n\nexport default LoginSaga;\n","import CURRENT_URL from './routes';\n\nexport const getAllPosts = (\n  profileId,\n  limit,\n  offset,\n) => new Promise((resolve, reject) => {\n  const url = new URL(`${CURRENT_URL}/posts/`);\n  const params = {\n    profileId,\n    limit,\n    offset,\n  }\n  Object.keys(params).forEach(key => params[key] && url.searchParams.append(key, params[key]))\n  fetch(url).then((resultado) =>  {\n    if (resultado.ok) {\n      resultado.json().then((res) => resolve(res));\n    } else {\n      resultado.json().then((res) => reject(res));\n    }\n  }).catch((error) => reject(error));\n});\n\nexport const getAllComments = (\n  postId,\n) => new Promise((resolve, reject) => {\n  fetch(`${CURRENT_URL}/posts/${postId}/`)\n  .then((resultado) =>  {\n    if (resultado.ok) {\n      resultado.json().then((res) => resolve(res));\n    } else {\n      resultado.json().then((res) => reject(res));\n    }\n  }).catch((error) => reject(error));\n});\n\n\nexport const createPost = (\n  token,\n  content,\n) => new Promise((resolve, reject) => {\n  fetch(`${CURRENT_URL}/posts/`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      \"Content-type\": \"application/json\"\n    },\n    method: 'POST',\n    body: JSON.stringify({\n      content\n    })\n  })\n  .then((resultado) =>  {\n    if (resultado.ok) {\n      resultado.json().then((res) => resolve(res));\n    } else {\n      resultado.json().then((res) => reject(res));\n    }\n  }).catch((error) => reject(error));\n});\n\nexport const createComment = (\n  token,\n  postId,\n  content,\n) => new Promise((resolve, reject) => {\n  fetch(`${CURRENT_URL}/posts/${postId}/`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      \"Content-type\": \"application/json\"\n    },\n    method: 'POST',\n    body: JSON.stringify({\n      content\n    })\n  })\n  .then((resultado) =>  {\n    if (resultado.ok) {\n      resultado.json().then((res) => resolve(res));\n    } else {\n      resultado.json().then((res) => reject(res));\n    }\n  }).catch((error) => reject(error));\n});","import {\n  put,\n  takeLatest,\n  call,\n  select,\n  delay,\n} from 'redux-saga/effects';\nimport {\n  getUserToken,\n  getCurrentPage,\n  getPageSize,\n} from '../reducers';\nimport * as postTypes from '../types/post';\nimport * as postActions from '../actions/post';\nimport * as postApi from '../apis/post';\n\nfunction* postFetcher(action) {\n  const {\n    payload: {\n      profileId,\n    },\n  } = action;\n  const currentPage = yield select(getCurrentPage);\n  const pageSize = yield select(getPageSize);\n  try {\n    const response = yield call(\n      postApi.getAllPosts,\n      profileId,\n      pageSize,\n      currentPage + 1,\n    );\n    yield delay(500);\n    yield put(postActions.fetchAllPostsConfirm({\n      allPosts: response.results,\n      currentPage: currentPage + 1, \n      nextPage: response.next !== null ? true : false,\n    }));\n  } catch (error) {\n    yield put(postActions.fetchAllPostsDecline({\n      message: error,\n    }));\n  }\n}\n\nfunction* commentsFetcher(action) {\n  const {\n    payload: {\n      postId,\n    },\n  } = action;\n  try {\n    const response = yield call(\n      postApi.getAllComments,\n      postId\n    );\n    yield delay(500);\n    yield put(postActions.fetchAllCommentsConfirm({\n      allComments: response,\n      postId,\n    }));\n  } catch (error) {\n    yield put(postActions.fetchAllCommentsDecline({\n      message: error,\n    }));\n  }\n}\n\nfunction* postCreator(action) {\n  const {\n    payload: {\n      content,\n      randomId,\n    },\n  } = action;\n  const token = yield select(getUserToken);\n  try {\n    const response = yield call(\n      postApi.createPost,\n      token,\n      content\n    );\n    yield put(postActions.createPostConfirm({\n      id: response.id,\n      randomId,\n      content: response.content,\n      date_created: response.date_created,\n      created_by: response.created_by,\n    })); \n  } catch (error) {\n    yield put(postActions.createPostDecline({\n      randomId,\n      message: error,\n    }));\n  }\n}\n\nfunction* commentCreator(action) {\n  const {\n    payload: {\n      postId,\n      content,\n      randomId,\n    },\n  } = action;\n  const token = yield select(getUserToken);\n  try {\n    const response = yield call(\n      postApi.createComment,\n      token,\n      postId,\n      content\n    );\n    yield put(postActions.commentPostConfirm({\n      postId,\n      id: response.id,\n      content: response.content,\n      dateCreated: response.date_created,\n      createdBy: response.created_by,\n      randomId,\n    }));\n  } catch (error) {\n    yield put(postActions.commentPostDecline({\n      postId,\n      message: error,\n      randomId,\n    }));\n  }\n}\n\nfunction* LoginSaga() {\n  yield takeLatest(\n    postTypes.FETCHED_ALL_POSTS,\n    postFetcher\n  );\n  yield takeLatest(\n    postTypes.FETCHED_ALL_COMMENTS,\n    commentsFetcher\n  );\n  yield takeLatest(\n    postTypes.CREATED_POST,\n    postCreator\n  );\n  yield takeLatest(\n    postTypes.COMMENTED_POST,\n    commentCreator\n  );\n}\n\nexport default LoginSaga;\n","import { fork, all } from 'redux-saga/effects';\nimport UserSaga from './user';\nimport PostSaga from './post';\n\nfunction* mainSaga() {\n  yield all([\n    fork(UserSaga),\n    fork(PostSaga),\n  ]);\n}\n\nexport default mainSaga;\n","import { createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from './reducers';\nimport mainSaga from './sagas';\n\nexport const sagaMiddleware = createSagaMiddleware();\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: [\n    'authReducer',\n  ],\n};\n\nconst configureStore = () => {\n  const persistedReducer = persistReducer(persistConfig, reducer);\n  const store = createStore(\n    persistedReducer,\n    applyMiddleware(sagaMiddleware),\n  );\n  const persistor = persistStore(store);\n\n  sagaMiddleware.run(mainSaga);\n  return { store, persistor };\n};\n\n\nexport default configureStore;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { history } from './history';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nconst storeConfig = configureStore();\n\nReactDOM.render(\n    <Provider store={storeConfig.store}>\n      <PersistGate loading={null} persistor={storeConfig.persistor}>\n        <Router history={history}>\n          <App />\n        </Router>\n      </PersistGate>\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post_post__3dfXB\",\"content\":\"post_content__h2BkW\",\"footer\":\"post_footer__1K30M\",\"bot\":\"post_bot__3fWVl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__HZ6Fg\",\"logo\":\"header_logo__3iSgw\",\"greedings\":\"header_greedings__1YUq6\",\"login\":\"header_login__1zFFR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wall\":\"wall_wall__1zXmL\",\"loading\":\"wall_loading__1G0Pv\",\"more\":\"wall_more__1gFhk\",\"form\":\"wall_form__1jCAV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"formInput_formInput__3UlXG\",\"big\":\"formInput_big__haJIS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment\":\"comment_comment__E4lLg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"register\":\"register_register__1d8O4\",\"form\":\"register_form__31fhn\",\"camps\":\"register_camps__P94z_\",\"errorMessage\":\"register_errorMessage__14tM_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__38jCY\",\"information\":\"profile_information__1SAyB\",\"profileImage\":\"profile_profileImage__3LwRO\",\"friends\":\"profile_friends__14eNu\"};"],"sourceRoot":""}